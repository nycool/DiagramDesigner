<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:at="clr-namespace:DiagramDesigner.AttachedProperties"
    xmlns:c="clr-namespace:DiagramDesigner.Controls"
    xmlns:cvt="clr-namespace:DiagramDesigner.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/Styles/Shared.xaml" />
        <ResourceDictionary Source="../Resources/Styles/ScrollBar.xaml" />
        <ResourceDictionary Source="../Resources/Styles/ScrollViewer.xaml" />
        <ResourceDictionary Source="../Resources/Styles/Expander.xaml" />
        <ResourceDictionary Source="../Resources/Styles/GroupBox.xaml" />
        <ResourceDictionary Source="../Resources/Styles/ToolTip.xaml" />
        <ResourceDictionary Source="../Resources/Styles/ZoomBox.xaml" />
        <ResourceDictionary Source="../Resources/Styles/DesignerItems.xaml" />

        <ResourceDictionary Source="../Themes/Generic.xaml" />
        <ResourceDictionary Source="../Resources/DataTemplate/GroupDesignerItem.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  ClickButton  -->
    <ControlTemplate x:Key="InfoButtonTemplate" TargetType="Button">
        <Grid x:Name="grid" Opacity="0.5">
            <Ellipse
                Width="16"
                Height="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Fill="White"
                Stroke="Black"
                StrokeThickness="2" />
            <Label
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="i"
                FontSize="12"
                FontStyle="Italic"
                FontWeight="Bold" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="grid" Property="Opacity" Value="1.0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--  ClickButton  -->




    <SolidColorBrush x:Key="Arrow.Color" Color="#FF6A15" />

    <SolidColorBrush x:Key="Line.Color" Color="#FF6A15" />

    <!--  Connector  -->
    <Style x:Key="ConnectorItemStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Width" Value="{Binding Area.Width}" />
        <Setter Property="Height" Value="{Binding Area.Height}" />
        <Setter Property="Canvas.Top" Value="{Binding Area.Top}" />
        <Setter Property="Canvas.Left" Value="{Binding Area.Left}" />
        <Setter Property="at:SelectionProps.EnabledForSelection" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Canvas
                        x:Name="selectedGrid"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Focusable="{TemplateBinding Focusable}">
                        <Polyline
                            x:Name="poly"
                            Points="{Binding Path=ConnectionPoints, Converter={x:Static cvt:ConnectionPathCvt.Instance}}"
                            Stroke="{StaticResource Line.Color}"
                            StrokeThickness="2" />
                        <Path
                            x:Name="arrow"
                            Canvas.Left="{Binding EndPoint.X}"
                            Canvas.Top="{Binding EndPoint.Y}"
                            Width="12"
                            Height="12"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Data="M 0 4 L 4 0 L 8 4 Z"
                            Fill="Red"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            Stroke="{StaticResource Arrow.Color}"
                            Visibility="{Binding Path=IsFullConnection, Converter={x:Static cvt:BoolToVisibilityCvt.Instance}}">
                            <Path.RenderTransform>
                                <RotateTransform x:Name="rot" />
                            </Path.RenderTransform>
                        </Path>
                    </Canvas>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="poly" Property="Stroke" Value="Black" />
                            <Setter TargetName="arrow" Property="Stroke" Value="Black" />
                            <Setter TargetName="arrow" Property="Fill" Value="Black" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SinkConnectorInfo.Orientation}" Value="Left">
                            <Setter TargetName="arrow" Property="Margin" Value="-15,-5,0,0" />
                            <Setter TargetName="arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SinkConnectorInfo.Orientation}" Value="Top">
                            <Setter TargetName="arrow" Property="Margin" Value="-5,-15,0,0" />
                            <Setter TargetName="arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SinkConnectorInfo.Orientation}" Value="Right">
                            <Setter TargetName="arrow" Property="Margin" Value="5,-5,0,0" />
                            <Setter TargetName="arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=SinkConnectorInfo.Orientation}" Value="Bottom">
                            <Setter TargetName="arrow" Property="Margin" Value="-5,10,0,0" />
                            <Setter TargetName="arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="0" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Connector  -->

    <!--  DesignerCanvas  -->
    <Style x:Key="DesignerStyle" TargetType="{x:Type c:DesignerCanvas}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="{x:Static c:DesignerCanvas.BringForward}" Header="up" />
                </ContextMenu>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="ShowGridLines" Value="False">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  DesignerCanvas  -->

    <!--  GridLine  -->
    <DrawingBrush
        x:Key="ViewerGridLines"
        TileMode="Tile"
        Viewport="0,0,40,40"
        ViewportUnits="Absolute">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Geometry="M0,0 L2,0">
                        <GeometryDrawing.Pen>
                            <Pen Brush="Black" Thickness="0.005">
                                <Pen.DashStyle>
                                    <DashStyle Dashes="0.1" />
                                </Pen.DashStyle>
                            </Pen>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>

                    <GeometryDrawing Geometry="M0,1 L2,1">
                        <GeometryDrawing.Pen>
                            <Pen Brush="Black" Thickness="0.01" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>

                    <GeometryDrawing Geometry="M0,0 L0,2">
                        <GeometryDrawing.Pen>
                            <Pen Brush="Black" Thickness="0.005">
                                <Pen.DashStyle>
                                    <DashStyle Dashes="0.1" />
                                </Pen.DashStyle>
                            </Pen>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>

                    <GeometryDrawing Geometry="M1,0 L1,2">
                        <GeometryDrawing.Pen>
                            <Pen Brush="Black" Thickness="0.01" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <!--  GridLine  -->
</ResourceDictionary>